<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="16.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <PreferredToolArchitecture>x64</PreferredToolArchitecture>
  </PropertyGroup>
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|x64">
      <Configuration>MinSizeRel</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{6EFA67E0-4F25-39E6-8BD3-A38E5DBF14C0}</ProjectGuid>
    <WindowsTargetPlatformVersion>10.0.19041.0</WindowsTargetPlatformVersion>
    <Keyword>Win32Proj</Keyword>
    <Platform>x64</Platform>
    <ProjectName>unit_tests</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\Users\AIZakharov\Documents\GitHub\STL_practice\build\bin\Debug\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">unit_tests.dir\Debug\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">unit_tests</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\Users\AIZakharov\Documents\GitHub\STL_practice\build\bin\Release\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">unit_tests.dir\Release\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Release|x64'">unit_tests</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Release|x64'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\Users\AIZakharov\Documents\GitHub\STL_practice\build\bin\MinSizeRel\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">unit_tests.dir\MinSizeRel\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">unit_tests</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\Users\AIZakharov\Documents\GitHub\STL_practice\build\bin\RelWithDebInfo\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">unit_tests.dir\RelWithDebInfo\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">unit_tests</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">.exe</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">true</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">true</GenerateManifest>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>D:\Users\AIZakharov\Documents\GitHub\STL_practice\tests\unit_tests\unit_tests;D:\Users\AIZakharov\Documents\GitHub\STL_practice\tests\unit_tests\PRIVATE;D:\Users\AIZakharov\Documents\GitHub\STL_practice\tests\unit_tests\headers;\include;D:\Users\AIZakharov\Documents\GitHub\STL_practice\include;D:\Users\AIZakharov\Documents\GitHub\googletest\googletest\include;D:\Users\AIZakharov\Documents\GitHub\googletest\googletest;D:\Users\AIZakharov\Documents\GitHub\googletest\googlemock\include;D:\Users\AIZakharov\Documents\GitHub\googletest\googlemock;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>Disabled</InlineFunctionExpansion>
      <Optimization>Disabled</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;GTEST_LANGUAGE_CXX11;CMAKE_INTDIR="Debug"</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_DEBUG;_WINDOWS;GTEST_LANGUAGE_CXX11;CMAKE_INTDIR=\"Debug\"</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>D:\Users\AIZakharov\Documents\GitHub\STL_practice\tests\unit_tests\unit_tests;D:\Users\AIZakharov\Documents\GitHub\STL_practice\tests\unit_tests\PRIVATE;D:\Users\AIZakharov\Documents\GitHub\STL_practice\tests\unit_tests\headers;\include;D:\Users\AIZakharov\Documents\GitHub\STL_practice\include;D:\Users\AIZakharov\Documents\GitHub\googletest\googletest\include;D:\Users\AIZakharov\Documents\GitHub\googletest\googletest;D:\Users\AIZakharov\Documents\GitHub\googletest\googlemock\include;D:\Users\AIZakharov\Documents\GitHub\googletest\googlemock;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>D:\Users\AIZakharov\Documents\GitHub\STL_practice\tests\unit_tests\unit_tests;D:\Users\AIZakharov\Documents\GitHub\STL_practice\tests\unit_tests\PRIVATE;D:\Users\AIZakharov\Documents\GitHub\STL_practice\tests\unit_tests\headers;\include;D:\Users\AIZakharov\Documents\GitHub\STL_practice\include;D:\Users\AIZakharov\Documents\GitHub\googletest\googletest\include;D:\Users\AIZakharov\Documents\GitHub\googletest\googletest;D:\Users\AIZakharov\Documents\GitHub\googletest\googlemock\include;D:\Users\AIZakharov\Documents\GitHub\googletest\googlemock;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalDependencies>..\..\Debug\SafeCallTaskHomework.lib;..\..\lib\Debug\gtestd.lib;..\..\lib\Debug\gtest_maind.lib;..\..\lib\Debug\gmockd.lib;..\..\lib\Debug\gmock_maind.lib;..\..\lib\Debug\gtestd.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>D:/Users/AIZakharov/Documents/GitHub/STL_practice/cmake_build/tests/UT_DIRECTORY/Debug/unit_tests.lib</ImportLibrary>
      <ProgramDataBaseFile>D:/Users/AIZakharov/Documents/GitHub/STL_practice/build/bin/Debug/unit_tests.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>D:\Users\AIZakharov\Documents\GitHub\STL_practice\tests\unit_tests\unit_tests;D:\Users\AIZakharov\Documents\GitHub\STL_practice\tests\unit_tests\PRIVATE;D:\Users\AIZakharov\Documents\GitHub\STL_practice\tests\unit_tests\headers;\include;D:\Users\AIZakharov\Documents\GitHub\STL_practice\include;D:\Users\AIZakharov\Documents\GitHub\googletest\googletest\include;D:\Users\AIZakharov\Documents\GitHub\googletest\googletest;D:\Users\AIZakharov\Documents\GitHub\googletest\googlemock\include;D:\Users\AIZakharov\Documents\GitHub\googletest\googlemock;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;GTEST_LANGUAGE_CXX11;CMAKE_INTDIR="Release"</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat>
      </DebugInformationFormat>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;GTEST_LANGUAGE_CXX11;CMAKE_INTDIR=\"Release\"</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>D:\Users\AIZakharov\Documents\GitHub\STL_practice\tests\unit_tests\unit_tests;D:\Users\AIZakharov\Documents\GitHub\STL_practice\tests\unit_tests\PRIVATE;D:\Users\AIZakharov\Documents\GitHub\STL_practice\tests\unit_tests\headers;\include;D:\Users\AIZakharov\Documents\GitHub\STL_practice\include;D:\Users\AIZakharov\Documents\GitHub\googletest\googletest\include;D:\Users\AIZakharov\Documents\GitHub\googletest\googletest;D:\Users\AIZakharov\Documents\GitHub\googletest\googlemock\include;D:\Users\AIZakharov\Documents\GitHub\googletest\googlemock;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>D:\Users\AIZakharov\Documents\GitHub\STL_practice\tests\unit_tests\unit_tests;D:\Users\AIZakharov\Documents\GitHub\STL_practice\tests\unit_tests\PRIVATE;D:\Users\AIZakharov\Documents\GitHub\STL_practice\tests\unit_tests\headers;\include;D:\Users\AIZakharov\Documents\GitHub\STL_practice\include;D:\Users\AIZakharov\Documents\GitHub\googletest\googletest\include;D:\Users\AIZakharov\Documents\GitHub\googletest\googletest;D:\Users\AIZakharov\Documents\GitHub\googletest\googlemock\include;D:\Users\AIZakharov\Documents\GitHub\googletest\googlemock;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalDependencies>..\..\Release\SafeCallTaskHomework.lib;..\..\lib\Release\gtest.lib;..\..\lib\Release\gtest_main.lib;..\..\lib\Release\gmock.lib;..\..\lib\Release\gmock_main.lib;..\..\lib\Release\gtest.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>D:/Users/AIZakharov/Documents/GitHub/STL_practice/cmake_build/tests/UT_DIRECTORY/Release/unit_tests.lib</ImportLibrary>
      <ProgramDataBaseFile>D:/Users/AIZakharov/Documents/GitHub/STL_practice/build/bin/Release/unit_tests.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>D:\Users\AIZakharov\Documents\GitHub\STL_practice\tests\unit_tests\unit_tests;D:\Users\AIZakharov\Documents\GitHub\STL_practice\tests\unit_tests\PRIVATE;D:\Users\AIZakharov\Documents\GitHub\STL_practice\tests\unit_tests\headers;\include;D:\Users\AIZakharov\Documents\GitHub\STL_practice\include;D:\Users\AIZakharov\Documents\GitHub\googletest\googletest\include;D:\Users\AIZakharov\Documents\GitHub\googletest\googletest;D:\Users\AIZakharov\Documents\GitHub\googletest\googlemock\include;D:\Users\AIZakharov\Documents\GitHub\googletest\googlemock;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <Optimization>MinSpace</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;GTEST_LANGUAGE_CXX11;CMAKE_INTDIR="MinSizeRel"</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat>
      </DebugInformationFormat>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;GTEST_LANGUAGE_CXX11;CMAKE_INTDIR=\"MinSizeRel\"</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>D:\Users\AIZakharov\Documents\GitHub\STL_practice\tests\unit_tests\unit_tests;D:\Users\AIZakharov\Documents\GitHub\STL_practice\tests\unit_tests\PRIVATE;D:\Users\AIZakharov\Documents\GitHub\STL_practice\tests\unit_tests\headers;\include;D:\Users\AIZakharov\Documents\GitHub\STL_practice\include;D:\Users\AIZakharov\Documents\GitHub\googletest\googletest\include;D:\Users\AIZakharov\Documents\GitHub\googletest\googletest;D:\Users\AIZakharov\Documents\GitHub\googletest\googlemock\include;D:\Users\AIZakharov\Documents\GitHub\googletest\googlemock;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>D:\Users\AIZakharov\Documents\GitHub\STL_practice\tests\unit_tests\unit_tests;D:\Users\AIZakharov\Documents\GitHub\STL_practice\tests\unit_tests\PRIVATE;D:\Users\AIZakharov\Documents\GitHub\STL_practice\tests\unit_tests\headers;\include;D:\Users\AIZakharov\Documents\GitHub\STL_practice\include;D:\Users\AIZakharov\Documents\GitHub\googletest\googletest\include;D:\Users\AIZakharov\Documents\GitHub\googletest\googletest;D:\Users\AIZakharov\Documents\GitHub\googletest\googlemock\include;D:\Users\AIZakharov\Documents\GitHub\googletest\googlemock;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalDependencies>..\..\MinSizeRel\SafeCallTaskHomework.lib;..\..\lib\MinSizeRel\gtest.lib;..\..\lib\MinSizeRel\gtest_main.lib;..\..\lib\MinSizeRel\gmock.lib;..\..\lib\MinSizeRel\gmock_main.lib;..\..\lib\MinSizeRel\gtest.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>D:/Users/AIZakharov/Documents/GitHub/STL_practice/cmake_build/tests/UT_DIRECTORY/MinSizeRel/unit_tests.lib</ImportLibrary>
      <ProgramDataBaseFile>D:/Users/AIZakharov/Documents/GitHub/STL_practice/build/bin/MinSizeRel/unit_tests.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>D:\Users\AIZakharov\Documents\GitHub\STL_practice\tests\unit_tests\unit_tests;D:\Users\AIZakharov\Documents\GitHub\STL_practice\tests\unit_tests\PRIVATE;D:\Users\AIZakharov\Documents\GitHub\STL_practice\tests\unit_tests\headers;\include;D:\Users\AIZakharov\Documents\GitHub\STL_practice\include;D:\Users\AIZakharov\Documents\GitHub\googletest\googletest\include;D:\Users\AIZakharov\Documents\GitHub\googletest\googletest;D:\Users\AIZakharov\Documents\GitHub\googletest\googlemock\include;D:\Users\AIZakharov\Documents\GitHub\googletest\googlemock;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;GTEST_LANGUAGE_CXX11;CMAKE_INTDIR="RelWithDebInfo"</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;GTEST_LANGUAGE_CXX11;CMAKE_INTDIR=\"RelWithDebInfo\"</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>D:\Users\AIZakharov\Documents\GitHub\STL_practice\tests\unit_tests\unit_tests;D:\Users\AIZakharov\Documents\GitHub\STL_practice\tests\unit_tests\PRIVATE;D:\Users\AIZakharov\Documents\GitHub\STL_practice\tests\unit_tests\headers;\include;D:\Users\AIZakharov\Documents\GitHub\STL_practice\include;D:\Users\AIZakharov\Documents\GitHub\googletest\googletest\include;D:\Users\AIZakharov\Documents\GitHub\googletest\googletest;D:\Users\AIZakharov\Documents\GitHub\googletest\googlemock\include;D:\Users\AIZakharov\Documents\GitHub\googletest\googlemock;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>D:\Users\AIZakharov\Documents\GitHub\STL_practice\tests\unit_tests\unit_tests;D:\Users\AIZakharov\Documents\GitHub\STL_practice\tests\unit_tests\PRIVATE;D:\Users\AIZakharov\Documents\GitHub\STL_practice\tests\unit_tests\headers;\include;D:\Users\AIZakharov\Documents\GitHub\STL_practice\include;D:\Users\AIZakharov\Documents\GitHub\googletest\googletest\include;D:\Users\AIZakharov\Documents\GitHub\googletest\googletest;D:\Users\AIZakharov\Documents\GitHub\googletest\googlemock\include;D:\Users\AIZakharov\Documents\GitHub\googletest\googlemock;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalDependencies>..\..\RelWithDebInfo\SafeCallTaskHomework.lib;..\..\lib\RelWithDebInfo\gtest.lib;..\..\lib\RelWithDebInfo\gtest_main.lib;..\..\lib\RelWithDebInfo\gmock.lib;..\..\lib\RelWithDebInfo\gmock_main.lib;..\..\lib\RelWithDebInfo\gtest.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>D:/Users/AIZakharov/Documents/GitHub/STL_practice/cmake_build/tests/UT_DIRECTORY/RelWithDebInfo/unit_tests.lib</ImportLibrary>
      <ProgramDataBaseFile>D:/Users/AIZakharov/Documents/GitHub/STL_practice/build/bin/RelWithDebInfo/unit_tests.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="D:\Users\AIZakharov\Documents\GitHub\STL_practice\tests\unit_tests\CMakeLists.txt">
      <StdOutEncoding>UTF-8</StdOutEncoding>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building Custom Rule D:/Users/AIZakharov/Documents/GitHub/STL_practice/tests/unit_tests/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"D:\Program Files\CMake\bin\cmake.exe" -SD:/Users/AIZakharov/Documents/GitHub/STL_practice -BD:/Users/AIZakharov/Documents/GitHub/STL_practice/cmake_build --check-stamp-file D:/Users/AIZakharov/Documents/GitHub/STL_practice/cmake_build/tests/UT_DIRECTORY/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\Users\AIZakharov\Documents\GitHub\STL_practice\tests\cmake_modules\AddGTestTest.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\Users\AIZakharov\Documents\GitHub\STL_practice\cmake_build\tests\UT_DIRECTORY\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building Custom Rule D:/Users/AIZakharov/Documents/GitHub/STL_practice/tests/unit_tests/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"D:\Program Files\CMake\bin\cmake.exe" -SD:/Users/AIZakharov/Documents/GitHub/STL_practice -BD:/Users/AIZakharov/Documents/GitHub/STL_practice/cmake_build --check-stamp-file D:/Users/AIZakharov/Documents/GitHub/STL_practice/cmake_build/tests/UT_DIRECTORY/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\Users\AIZakharov\Documents\GitHub\STL_practice\tests\cmake_modules\AddGTestTest.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\Users\AIZakharov\Documents\GitHub\STL_practice\cmake_build\tests\UT_DIRECTORY\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building Custom Rule D:/Users/AIZakharov/Documents/GitHub/STL_practice/tests/unit_tests/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"D:\Program Files\CMake\bin\cmake.exe" -SD:/Users/AIZakharov/Documents/GitHub/STL_practice -BD:/Users/AIZakharov/Documents/GitHub/STL_practice/cmake_build --check-stamp-file D:/Users/AIZakharov/Documents/GitHub/STL_practice/cmake_build/tests/UT_DIRECTORY/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\Users\AIZakharov\Documents\GitHub\STL_practice\tests\cmake_modules\AddGTestTest.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\Users\AIZakharov\Documents\GitHub\STL_practice\cmake_build\tests\UT_DIRECTORY\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building Custom Rule D:/Users/AIZakharov/Documents/GitHub/STL_practice/tests/unit_tests/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"D:\Program Files\CMake\bin\cmake.exe" -SD:/Users/AIZakharov/Documents/GitHub/STL_practice -BD:/Users/AIZakharov/Documents/GitHub/STL_practice/cmake_build --check-stamp-file D:/Users/AIZakharov/Documents/GitHub/STL_practice/cmake_build/tests/UT_DIRECTORY/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\Users\AIZakharov\Documents\GitHub\STL_practice\tests\cmake_modules\AddGTestTest.cmake;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\Users\AIZakharov\Documents\GitHub\STL_practice\cmake_build\tests\UT_DIRECTORY\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="D:\Users\AIZakharov\Documents\GitHub\STL_practice\tests\unit_tests\src\main.cpp" />
    <ClCompile Include="D:\Users\AIZakharov\Documents\GitHub\STL_practice\tests\unit_tests\src\maintest.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="D:\Users\AIZakharov\Documents\GitHub\STL_practice\cmake_build\ZERO_CHECK.vcxproj">
      <Project>{6D12CAF8-FB10-3446-82DD-3EBEDCCC65EC}</Project>
      <Name>ZERO_CHECK</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
    <ProjectReference Include="D:\Users\AIZakharov\Documents\GitHub\STL_practice\cmake_build\SafeCallTaskHomework.vcxproj">
      <Project>{A3DAC1E6-027B-3255-AF27-9DF3A6AE1148}</Project>
      <Name>SafeCallTaskHomework</Name>
    </ProjectReference>
    <ProjectReference Include="\gmock\googlemock\gmock.vcxproj">
      <Project>{B35AC091-BAEC-345B-8CDD-761D3D886C11}</Project>
      <Name>gmock</Name>
    </ProjectReference>
    <ProjectReference Include="\gmock\googlemock\gmock_main.vcxproj">
      <Project>{217617F3-B916-3531-A05B-49409449BF12}</Project>
      <Name>gmock_main</Name>
    </ProjectReference>
    <ProjectReference Include="\gmock\googletest\gtest.vcxproj">
      <Project>{F326CCB8-86A8-3A3B-B81F-86846A6E6819}</Project>
      <Name>gtest</Name>
    </ProjectReference>
    <ProjectReference Include="\gmock\googletest\gtest_main.vcxproj">
      <Project>{58C91DB7-8564-3AFF-B4D0-0288A75F28F3}</Project>
      <Name>gtest_main</Name>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>